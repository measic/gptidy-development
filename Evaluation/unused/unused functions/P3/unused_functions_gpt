[{'reason': 'stop', 'result': "['squared', 'absolute']"}, {'reason': 'stop', 'result': "['insert_random_character']"}, {'reason': 'stop', 'result': "['systemcall', 'systemcall_pipe']"}, {'reason': 'stop', 'result': "['delete_random_character']"}, {'reason': 'stop', 'result': "['myfunc']"}, {'reason': 'stop', 'result': "['value_iteration']"}, {'reason': 'stop', 'result': "['plotImg', 'plotAll']"}, {'reason': 'stop', 'result': "['regression_formula']"}, {'reason': 'stop', 'result': "['Lectura', 'Grafica']"}, {'reason': 'stop', 'result': "['plot_image', 'plot_color_image']"}, {'reason': 'stop', 'result': "['to_appropriate_column_name']"}, {'reason': 'stop', 'result': "['create_xgb_target']"}, {'reason': 'stop', 'result': "['true_mean_function', 'add_noise', 'generate_t']"}, {'reason': 'stop', 'result': "['blockMotion']"}, {'reason': 'stop', 'result': "['highlight_column_matches', 'plot_stats', 'save_rnn_layers', 'save_mlp_layers', 'glance_at_tensor']"}, {'reason': 'stop', 'result': "['inverse_difference', 'scale', 'invert_scale', 'fit_lstm']"}, {'reason': 'stop', 'result': "['recall']"}, {'reason': 'stop', 'result': "['two_layer_nn', 'predict', 'loss_fn', 'grads_fn', 'fit']"}, {'reason': 'stop', 'result': "['get_positive_class_probabilities', 'get_accuracy', 'show_prediction_accuracy']"}, {'reason': 'stop', 'result': "['draw_week_id', 'draw_week_ids', 'draw_ids', 'draw_ids_avg', 'draw_ids_diff', 'draw_id']"}, {'reason': 'stop', 'result': "['value_iteration']"}, {'reason': 'stop', 'result': "['sframe_to_scipy']"}, {'reason': 'stop', 'result': "['forward_pass']"}, {'reason': 'stop', 'result': "['get_Ks']"}, {'reason': 'stop', 'result': "['regression_optimize_theta', 'log_pY']"}, {'reason': 'stop', 'result': "['calc_score', 'calc_hangboard_scores', 'calc_gym_scores', 'calc_climbing_scores', 'calc_arc_scores', 'calc_technique_scores', 'calc_power_scores', 'calc_yoga_scores']"}, {'reason': 'stop', 'result': "['correr_randomized_y_mostrar', 'verTiempo']"}, {'reason': 'stop', 'result': "['predict_next_chars']"}, {'reason': 'stop', 'result': "['show_results']"}, {'reason': 'stop', 'result': "['word2embedding', 'sent2embedding']"}, {'reason': 'stop', 'result': "['extractPolyFromKML', 'visualizePoly', 'visualizeNodes', 'visualizeLinks', 'nodesPerRegion', 'linksPerRegion', 'getNodes', 'writeToCSV']"}, {'reason': 'stop', 'result': "['test_diag_fun', 'dydt']"}, {'reason': 'stop', 'result': "['eval_grads', 'process_weights', 'flatten_grads', 'full']"}, {'reason': 'stop', 'result': "['nCr']"}, {'reason': 'stop', 'result': "['getBestParamsSVM']"}, {'reason': 'stop', 'result': "['gp_plot']"}, {'reason': 'stop', 'result': "['gp_predictive_distribution']"}, {'reason': 'stop', 'result': "['showPrecisionRecallPairByLabel']"}, {'reason': 'stop', 'result': "['importInflunet', 'padInflunet', 'getInflunet']"}, {'reason': 'stop', 'result': "['update_nueron']"}, {'reason': 'stop', 'result': "['backward_pass']"}, {'reason': 'stop', 'result': "['R_pca', 'norm_p', 'shrink', 'svd_threshold', 'fit', 'plot_fit']"}, {'reason': 'stop', 'result': "['test_set5', 'test_set14', 'test_bsd100', '_test_loop']"}, {'reason': 'stop', 'result': "['buildIncomesExpenses']"}, {'reason': 'stop', 'result': "['precision']"}, {'reason': 'stop', 'result': "['accuracy']"}, {'reason': 'stop', 'result': "['get_data_from_tsv']"}, {'reason': 'stop', 'result': "['get_neighbour_messages']"}, {'reason': 'stop', 'result': "['show_history_graph']"}, {'reason': 'stop', 'result': "['NRM1', 'SCL1', 'TRSH']"}, {'reason': 'stop', 'result': "['print_policy']"}, {'reason': 'stop', 'result': "['delta_f']"}, {'reason': 'stop', 'result': "['get_fpy_az']"}, {'reason': 'stop', 'result': "['path_to_tensor', 'paths_to_tensor']"}, {'reason': 'stop', 'result': "['load_coords']"}, {'reason': 'stop', 'result': "['create_anottations', 'draw_anottation']"}, {'reason': 'stop', 'result': "['bow_lights_gt_50m']"}, {'reason': 'stop', 'result': "['evaluate']"}, {'reason': 'stop', 'result': "['clean_data']"}, {'reason': 'stop', 'result': "['timeseries_to_supervised']"}, {'reason': 'stop', 'result': "['read_table']"}, {'reason': 'stop', 'result': "['shuffle_batch']"}, {'reason': 'stop', 'result': "['rv_plot2']"}, {'reason': 'stop', 'result': "['LeNet6']"}, {'reason': 'stop', 'result': "['stick_breaking']"}, {'reason': 'stop', 'result': "['fit_model']"}, {'reason': 'stop', 'result': "['basic_stock_features']"}, {'reason': 'stop', 'result': "['rover_coords', 'to_polar_coords', 'rotate_pix', 'translate_pix', 'pix_to_world']"}, {'reason': 'stop', 'result': "['poisson_approx', 'gaussian']"}, {'reason': 'stop', 'result': "['create_sr_model', '_residual_block', '_upscale_block', 'set_trainable', 'get_generator_output']"}, {'reason': 'stop', 'result': "['qda_accracy']"}, {'reason': 'stop', 'result': "['calc_spectrum_filter_flux', 'calc_specphot', 'compare_phot_specphot']"}, {'reason': 'stop', 'result': "['processCSV']"}, {'reason': 'stop', 'result': "['stern_light']"}, {'reason': 'stop', 'result': "['get_augmented_images', 'get_augmented_images_by_class']"}, {'reason': 'stop', 'result': "['daterange', 'get_trace_sum_balances']"}, {'reason': 'stop', 'result': "['System', 'Number', 'Mass', 'CenterOfMass', 'Error_CM']"}, {'reason': 'stop', 'result': '[]'}, {'reason': 'stop', 'result': "['make_export_table']"}, {'reason': 'stop', 'result': "['outputFeatureMap']"}, {'reason': 'stop', 'result': "['runLogitL1']"}, {'reason': 'stop', 'result': "['make_document', 'update']"}, {'reason': 'stop', 'result': "['run_function', 'run']"}, {'reason': 'stop', 'result': "['replace_unknown', 'simplify_decoding']"}, {'reason': 'stop', 'result': "['fit_lstm']"}, {'reason': 'stop', 'result': "['select_features']"}, {'reason': 'stop', 'result': "['vm']"}, {'reason': 'stop', 'result': "['add_degrees_isotypic', 'add_degrees_symmetric', 'add_degrees_test']"}, {'reason': 'stop', 'result': "['get_df_cols', 'get_name', 'get_airports_arrival_sorted', 'add_airports_name', 'print_top_n_arrival_airport']"}, {'reason': 'stop', 'result': "['return_itself']"}, {'reason': 'stop', 'result': "['evaluate']"}, {'reason': 'stop', 'result': 'No unused functions/methods found.'}, {'reason': 'stop', 'result': "['logprob', 'sample_distribution', 'sample', 'random_distribution']"}, {'reason': 'stop', 'result': "['is_valid_url']"}, {'reason': 'stop', 'result': "['build_index']"}, {'reason': 'stop', 'result': "['error']"}, {'reason': 'stop', 'result': "['create_model']"}, {'reason': 'stop', 'result': "['ode']"}, {'reason': 'stop', 'result': "['window_bounds']"}, {'reason': 'stop', 'result': "['calc_other_neighbour_msg_prod']"}, {'reason': 'stop', 'result': "['neuron']"}, {'reason': 'stop', 'result': "['get_wide_deep']"}, {'reason': 'stop', 'result': "['fill_nulls']"}, {'reason': 'stop', 'result': "['grayscale', 'canny', 'gaussian_blur', 'region_of_interest', 'draw_lines', 'hough_lines', 'weighted_img']"}, {'reason': 'stop', 'result': "['view_samples']"}, {'reason': 'stop', 'result': "['value', 'delta']"}, {'reason': 'stop', 'result': "['make_input_fn']"}, {'reason': 'stop', 'result': "['insert_and_time_filter_cuckoo_filter']"}, {'reason': 'stop', 'result': "['newcyjsWidget', 'MyThread', 'testThread', 'setSize', 'fit', 'getSelectedNodes', 'selectNodes', 'clearSelection', 'msg_arrived', 'dispatch', 'getResponse']"}, {'reason': 'stop', 'result': "['term_output']"}, {'reason': 'stop', 'result': "['getWiki']"}, {'reason': 'stop', 'result': "['ResNet50_predict_labels']"}, {'reason': 'stop', 'result': "['inverse_difference']"}, {'reason': 'stop', 'result': "['getBestParams']"}, {'reason': 'stop', 'result': "['convert_column_string_encoding', 'get_mjdmax_BessellV']"}, {'reason': 'stop', 'result': "['window_bounds']"}, {'reason': 'stop', 'result': "['forecast']"}, {'reason': 'stop', 'result': "['func1']"}, {'reason': 'stop', 'result': "['get_nuclides']"}, {'reason': 'stop', 'result': "['get_model_params', 'restore_model_params']"}, {'reason': 'stop', 'result': "['accuracy']"}, {'reason': 'stop', 'result': "['read_dataset']"}, {'reason': 'stop', 'result': "['hypothesis_inlinecounter', 'hypothesis_capswords', 'hypothesis_verbs', 'hypothesis_nouns']"}, {'reason': 'stop', 'result': "['build_poly']"}, {'reason': 'stop', 'result': "['Hmm', 'train', 'calc_count_xy_y', 'calc_transition_count']"}, {'reason': 'stop', 'result': "['coords_of_max']"}, {'reason': 'stop', 'result': "['VGG16_predict_breed']"}, {'reason': 'stop', 'result': "['outputFeatureMap']"}, {'reason': 'stop', 'result': "['plot_2d']"}, {'reason': 'stop', 'result': "['buildProfit']"}, {'reason': 'stop', 'result': "['plot']"}, {'reason': 'stop', 'result': "['calc_sum_product_variable_to_factor_msg']"}, {'reason': 'stop', 'result': "['sample_withplot']"}, {'reason': 'stop', 'result': "['delete_from_bloom_filter_and_time']"}, {'reason': 'stop', 'result': "['read_s3_csv']"}, {'reason': 'stop', 'result': "['squared_error']"}, {'reason': 'stop', 'result': "['clean_election_data']"}, {'reason': 'stop', 'result': "['face_detector']"}, {'reason': 'stop', 'result': "['convert_col_type']"}, {'reason': 'stop', 'result': "['disp_image']"}, {'reason': 'stop', 'result': "['ItemSelector']"}, {'reason': 'stop', 'result': "['make_feature_cols']"}, {'reason': 'stop', 'result': "['dateRange', 'date_to_week', 'week_to_date']"}, {'reason': 'stop', 'result': "['tokenizer']"}, {'reason': 'stop', 'result': "['square']"}, {'reason': 'stop', 'result': "['buildTraces']"}, {'reason': 'stop', 'result': "['get_translation']"}, {'reason': 'stop', 'result': "['IRLS']"}, {'reason': 'stop', 'result': "['pos_vel_filter']"}, {'reason': 'stop', 'result': "['removal_evolution']"}, {'reason': 'stop', 'result': "['regression_and_rss']"}, {'reason': 'stop', 'result': "['IsotypicComponent']"}, {'reason': 'stop', 'result': "['highlight_max']"}, {'reason': 'stop', 'result': "['kmeans_multiple_runs']"}, {'reason': 'stop', 'result': "['predict_next_chars']"}, {'reason': 'stop', 'result': "['detect_dog_breed']"}, {'reason': 'stop', 'result': "['parser']"}, {'reason': 'stop', 'result': "['append_gan_network', 'set_trainable', 'load_gan_weights', 'save_gan_weights']"}, {'reason': 'stop', 'result': "['enable_heatmap', 'disable_heatmap', 'handle_interaction', 'fetch_zipcode', 'add_point', 'add_geojson', 'add_geojsons', 'add_zipcode', 'progressive_iter', 'add_zipcodes_no_check', 'add_zipcodes', 'display']"}, {'reason': 'stop', 'result': "['process_image']"}, {'reason': 'stop', 'result': "['is_int']"}, {'reason': 'stop', 'result': "['sigmoid']"}, {'reason': 'stop', 'result': "['prepare_image']"}, {'reason': 'stop', 'result': "['find_f']"}, {'reason': 'stop', 'result': "['splitData']"}, {'reason': 'stop', 'result': "['max_norm_regularizer', 'max_norm']"}, {'reason': 'stop', 'result': "['f']"}, {'reason': 'stop', 'result': "['calc_sum_product_factor_to_variable_msg']"}, {'reason': 'stop', 'result': "['calc_sum_product_variable_to_factor_msg']"}, {'reason': 'stop', 'result': "['mutate']"}, {'reason': 'stop', 'result': "['max_sum']"}, {'reason': 'stop', 'result': "['PreProcess']"}, {'reason': 'stop', 'result': "['make_pca']"}, {'reason': 'stop', 'result': "['powers']"}, {'reason': 'stop', 'result': "['get_initial_centroids']"}, {'reason': 'stop', 'result': "['insert_and_time_filter_bloom_filter']"}, {'reason': 'stop', 'result': "['delete_from_cuckoo_filter_and_time']"}, {'reason': 'stop', 'result': "['flip_random_character']"}, {'reason': 'stop', 'result': "['plotMetrics']"}, {'reason': 'stop', 'result': "['test']"}, {'reason': 'stop', 'result': "['check_iambic_pentameter']"}, {'reason': 'stop', 'result': "['eulerCoupledAdaptive']"}, {'reason': 'stop', 'result': "['rmse_cv']"}, {'reason': 'stop', 'result': "['f2']"}, {'reason': 'stop', 'result': "['fit_model']"}, {'reason': 'stop', 'result': 'There are no unused functions/methods in the provided code.'}, {'reason': 'stop', 'result': "['ValueEstimator', 'predict', 'update']"}, {'reason': 'stop', 'result': "['sample']"}, {'reason': 'stop', 'result': "['generate_line', 'convert_line', 'generate_pair', 'generate_rhyming_and_meter_sonnet', 'generate_10_rhyming_and_meter_sonnets']"}, {'reason': 'stop', 'result': "['sum_product']"}, {'reason': 'stop', 'result': "['move_dimension_first']"}, {'reason': 'stop', 'result': "['test_features_ground', 'test_features_norm', 'test_features_polar', 'test_features_delta']"}, {'reason': 'stop', 'result': "['policy_iteration']"}, {'reason': 'stop', 'result': "['path_to_tensor', 'paths_to_tensor']"}, {'reason': 'stop', 'result': "['top_resultados', 'bot_resultados', 'correr_y_mostrar']"}, {'reason': 'stop', 'result': "['next_batch']"}, {'reason': 'stop', 'result': "['EncoderLayer']"}, {'reason': 'stop', 'result': "['vandermonde']"}, {'reason': 'stop', 'result': "['sgd_iter']"}, {'reason': 'stop', 'result': "['LeNet', 'model_arc']"}, {'reason': 'stop', 'result': "['derivative_of']"}, {'reason': 'stop', 'result': "['process_image']"}, {'reason': 'stop', 'result': "['broad_less_than_50_meters_starboard']"}, {'reason': 'stop', 'result': "['whose_a_good_doggy']"}, {'reason': 'stop', 'result': "['draw_rule_and_reg_id']"}, {'reason': 'stop', 'result': "['cv_split']"}, {'reason': 'stop', 'result': "['compute_character']"}, {'reason': 'stop', 'result': "['grayscale', 'canny', 'gaussian_blur', 'region_of_interest', 'draw_lines', 'draw_lines_roi', 'hough_lines', 'weighted_img']"}, {'reason': 'stop', 'result': "['convert_invalid_values']"}]